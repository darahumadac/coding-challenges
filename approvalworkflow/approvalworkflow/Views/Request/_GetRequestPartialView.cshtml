@using approvalworkflow.Enums
@model UserRequest

@{
    var statusBadgeClass = Model.Status switch
    {
        RequestStatus.Pending => ("warning", "dark"),
        RequestStatus.Cancelled => ("dark", "light"),
        RequestStatus.Approved => ("success", "light"),
        RequestStatus.Rejected => ("danger", "light"),
        _ => ("light", "dark")
    };

}

<div class="modal fade" id="view-request-modal">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div
                class="modal-header bg-secondary bg-gradient text-light d-flex justify-content-between align-items-center">
                <span class="status-badge badge bg-@statusBadgeClass.Item1 text-@statusBadgeClass.Item2">@Model.Status</span>
                <h5 class="modal-title">Request #@Model.Id - @Model.Title </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex justify-content-evenly mx-3">
                <div class="info flex-fill">
                    <h4 class="mb-4">Request Information</h4>
                    <div class="mb-3 me-5 text-break">
                        <h6 class="fw-bold">Description:</h6>
                        <p>@Model.Description</p>
                    </div>
                    <div class="mb-3">
                        <h6 class="fw-bold">Request Date:</h6>
                        <p>@Model.CreatedDate.ToLocalTime().ToString("MMM dd yyyy, hh:mm:ss tt")</p>
                    </div>
                </div>
                <div class="flex-fill">
                    <h4 class="mb-4">Approvers</h4>
                    </p>
                    @if(Model.Status == RequestStatus.Draft)
                    {
                        <p class="remarks fst-italic">Not yet submitted</p>
                    }else
                    {
                        @if (Model.Approvals.Count == 0)
                        {
                            <p class="remarks fst-italic">No Approval Required</p>
                        }
                        <ul>
                            @foreach (var approval in Model.Approvals)
                            {
                                <li>@approval.Approver?.FullName</li>
                            }
                        </ul>
                    }
                </div>
                <div>
                    <h4 class="mb-4">Request Status Timeline</h4>
                    @{
                        var requestStatus = Model.Status;
                        var finalStatusList = Enum.GetValues<RequestStatus>()
                        .Where(s => s >= RequestStatus.Cancelled)
                        .ToHashSet();
                        var statusList = Enum.GetValues<RequestStatus>()
                        .Where(s => s < requestStatus && !finalStatusList.Contains(s) || s == requestStatus);
                    }

                    <div class="timeline">
                        @foreach (var status in statusList)
                        {
                            var progress = status < requestStatus || finalStatusList.Contains(status) ? "completed"
                            : status == requestStatus ? "in-progress" : "";

                            <div class="timeline-step @progress">
                                <div class="dot"></div>
                                <div class="label">Request @status.ToString()</div>
                                <div class="timestamp">Date </div>
                                @if (status == RequestStatus.Pending)
                                {
                                    var pendingApprovers = Model.Approvals
                                    .Where(a => a.Status == ApprovalStatus.Pending)
                                    .Select(a => a.Approver?.FullName);
                                    @foreach (var approver in pendingApprovers)
                                    {
                                        <div class="approver">@approver</div>
                                    }
                                }
                            </div>

                        }

                    </div>
                </div>
            </div>
        </div>
    </div>